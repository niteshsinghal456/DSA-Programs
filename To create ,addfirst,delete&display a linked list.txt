#include<stdio.h>
#include<conio.h>
#include<malloc.h>
#include<stdlib.h>
#include<string.h>
struct node
{
int data;
struct node *next;
}
*start:
void create(int);
void display();
void addfirst(int);
void delete(int);
void main()
{
int num,i,choice,pos;
clrscr();
start=NULL;
do
{
printf("\n 1.Create \n 2.Display \n 3.Add \n 4.Delete \n 5.Exit \n");
printf("\n Enter your choice:");
scanf("%d",&choice);
switch(choice)
{
case 1:printf("Enter item to add in the List\n");
scanf("%d",&num);
create(num);
break;
case 2:display();
break;
case 3:printf("Add new node and item in begining of List\n");
scanf("%d",&num);
add(num);
break;
case 4:printf("\n Enter item you want to remove \n");
scanf("%d",&num);
delete(num);
break;
case 5:exit(0);
default:printf("Wrong Choice\n");
}
}
while(1)
}
void create(int num)
{
struct node *q,*t;
(start==NULL)
{
start=(struct node*)malloc(sizeof(stuct node));
start->data=num;
start->next=NULL;
}
else
{
q=start;
while(q->=NULL)
{
q=q->next;
}
t=(struct node*)malloc(sizeof(struct node));
t->data=num;
t->next=NULL;
q->next=t;
}
}
void display()
{
struct node*q;
if(start=NULL)
{
printf("\n LIst is Empty \n");
for(q=start;q!=NULL;q=q->next)
printf("\n Item=%d",q->data);
}
void addfirst(int num)
{
struct node *q;
q=(struct node*)malloc(sizeof(struct node));
q->data=num;
q->next=start;
start=q;
}
void delete(int num)
{
struct node *q,*t;
q=start;
if(q==NULL)
{
printf("\n List is Empty\n");
return;
}
if(q->data=num)
{
start=q->next;
printf("\nElement removed\n");
free9q);
return;
//traverse list
t=q;
q=q->next;
while(q!=NULL)
{
if(q->data=num)
{
t->next=q->next;
printf("\n Item Removed \n");
free(q);
return;
}
t=q;
q=q->next;
}
printf("\n Item=%d is not found \n",num);
}
